//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\My Dev\mlo\Mlo.Examples.Antlr4\Mlo.Examples.Antlr4.SqlParserExample01\SqlParser.g4 by ANTLR 4.5.3

// Unreachable code detected

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;

#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Mlo.Examples.Antlr4.DemoApp02.Parsers {

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SqlParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public interface ISqlParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sql"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSql([NotNull] SqlParser.SqlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sql"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSql([NotNull] SqlParser.SqlContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] SqlParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] SqlParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.data_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_statement([NotNull] SqlParser.Data_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.data_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_statement([NotNull] SqlParser.Data_statementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.data_change_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_change_statement([NotNull] SqlParser.Data_change_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.data_change_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_change_statement([NotNull] SqlParser.Data_change_statementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.schema_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSchema_statement([NotNull] SqlParser.Schema_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.schema_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSchema_statement([NotNull] SqlParser.Schema_statementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.index_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_statement([NotNull] SqlParser.Index_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.index_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_statement([NotNull] SqlParser.Index_statementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.create_table_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_table_statement([NotNull] SqlParser.Create_table_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.create_table_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_table_statement([NotNull] SqlParser.Create_table_statementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_elements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_elements([NotNull] SqlParser.Table_elementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_elements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_elements([NotNull] SqlParser.Table_elementsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.field_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterField_element([NotNull] SqlParser.Field_elementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.field_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitField_element([NotNull] SqlParser.Field_elementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.field_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterField_type([NotNull] SqlParser.Field_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.field_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitField_type([NotNull] SqlParser.Field_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.param_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam_clause([NotNull] SqlParser.Param_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.param_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam_clause([NotNull] SqlParser.Param_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] SqlParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] SqlParser.ParamContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.method_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_specifier([NotNull] SqlParser.Method_specifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.method_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_specifier([NotNull] SqlParser.Method_specifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_space_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_space_specifier([NotNull] SqlParser.Table_space_specifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_space_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_space_specifier([NotNull] SqlParser.Table_space_specifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_space_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_space_name([NotNull] SqlParser.Table_space_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_space_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_space_name([NotNull] SqlParser.Table_space_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_partitioning_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_partitioning_clauses([NotNull] SqlParser.Table_partitioning_clausesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_partitioning_clauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_partitioning_clauses([NotNull] SqlParser.Table_partitioning_clausesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.range_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange_partitions([NotNull] SqlParser.Range_partitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.range_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange_partitions([NotNull] SqlParser.Range_partitionsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.range_value_clause_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange_value_clause_list([NotNull] SqlParser.Range_value_clause_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.range_value_clause_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange_value_clause_list([NotNull] SqlParser.Range_value_clause_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.range_value_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange_value_clause([NotNull] SqlParser.Range_value_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.range_value_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange_value_clause([NotNull] SqlParser.Range_value_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.hash_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHash_partitions([NotNull] SqlParser.Hash_partitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.hash_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHash_partitions([NotNull] SqlParser.Hash_partitionsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.individual_hash_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndividual_hash_partitions([NotNull] SqlParser.Individual_hash_partitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.individual_hash_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndividual_hash_partitions([NotNull] SqlParser.Individual_hash_partitionsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.individual_hash_partition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndividual_hash_partition([NotNull] SqlParser.Individual_hash_partitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.individual_hash_partition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndividual_hash_partition([NotNull] SqlParser.Individual_hash_partitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.hash_partitions_by_quantity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHash_partitions_by_quantity([NotNull] SqlParser.Hash_partitions_by_quantityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.hash_partitions_by_quantity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHash_partitions_by_quantity([NotNull] SqlParser.Hash_partitions_by_quantityContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.list_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_partitions([NotNull] SqlParser.List_partitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.list_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_partitions([NotNull] SqlParser.List_partitionsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.list_value_clause_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_value_clause_list([NotNull] SqlParser.List_value_clause_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.list_value_clause_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_value_clause_list([NotNull] SqlParser.List_value_clause_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.list_value_partition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList_value_partition([NotNull] SqlParser.List_value_partitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.list_value_partition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList_value_partition([NotNull] SqlParser.List_value_partitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_partitions([NotNull] SqlParser.Column_partitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_partitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_partitions([NotNull] SqlParser.Column_partitionsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.partition_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartition_name([NotNull] SqlParser.Partition_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.partition_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartition_name([NotNull] SqlParser.Partition_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.drop_table_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrop_table_statement([NotNull] SqlParser.Drop_table_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.drop_table_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrop_table_statement([NotNull] SqlParser.Drop_table_statementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] SqlParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] SqlParser.IdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.nonreserved_keywords"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonreserved_keywords([NotNull] SqlParser.Nonreserved_keywordsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.nonreserved_keywords"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonreserved_keywords([NotNull] SqlParser.Nonreserved_keywordsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unsigned_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsigned_literal([NotNull] SqlParser.Unsigned_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unsigned_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsigned_literal([NotNull] SqlParser.Unsigned_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.general_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneral_literal([NotNull] SqlParser.General_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.general_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneral_literal([NotNull] SqlParser.General_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.datetime_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatetime_literal([NotNull] SqlParser.Datetime_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.datetime_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatetime_literal([NotNull] SqlParser.Datetime_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.time_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTime_literal([NotNull] SqlParser.Time_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.time_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTime_literal([NotNull] SqlParser.Time_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.timestamp_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimestamp_literal([NotNull] SqlParser.Timestamp_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.timestamp_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimestamp_literal([NotNull] SqlParser.Timestamp_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.date_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDate_literal([NotNull] SqlParser.Date_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.date_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDate_literal([NotNull] SqlParser.Date_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_literal([NotNull] SqlParser.Boolean_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_literal([NotNull] SqlParser.Boolean_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.data_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_type([NotNull] SqlParser.Data_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.data_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_type([NotNull] SqlParser.Data_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.predefined_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredefined_type([NotNull] SqlParser.Predefined_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.predefined_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredefined_type([NotNull] SqlParser.Predefined_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.network_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNetwork_type([NotNull] SqlParser.Network_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.network_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNetwork_type([NotNull] SqlParser.Network_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.character_string_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter_string_type([NotNull] SqlParser.Character_string_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.character_string_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter_string_type([NotNull] SqlParser.Character_string_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.type_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_length([NotNull] SqlParser.Type_lengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.type_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_length([NotNull] SqlParser.Type_lengthContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.national_character_string_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNational_character_string_type([NotNull] SqlParser.National_character_string_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.national_character_string_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNational_character_string_type([NotNull] SqlParser.National_character_string_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.binary_large_object_string_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinary_large_object_string_type([NotNull] SqlParser.Binary_large_object_string_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.binary_large_object_string_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinary_large_object_string_type([NotNull] SqlParser.Binary_large_object_string_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_type([NotNull] SqlParser.Numeric_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_type([NotNull] SqlParser.Numeric_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.exact_numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExact_numeric_type([NotNull] SqlParser.Exact_numeric_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.exact_numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExact_numeric_type([NotNull] SqlParser.Exact_numeric_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.approximate_numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterApproximate_numeric_type([NotNull] SqlParser.Approximate_numeric_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.approximate_numeric_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitApproximate_numeric_type([NotNull] SqlParser.Approximate_numeric_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.precision_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrecision_param([NotNull] SqlParser.Precision_paramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.precision_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrecision_param([NotNull] SqlParser.Precision_paramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_type([NotNull] SqlParser.Boolean_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_type([NotNull] SqlParser.Boolean_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.datetime_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatetime_type([NotNull] SqlParser.Datetime_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.datetime_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatetime_type([NotNull] SqlParser.Datetime_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.bit_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBit_type([NotNull] SqlParser.Bit_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.bit_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBit_type([NotNull] SqlParser.Bit_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.binary_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinary_type([NotNull] SqlParser.Binary_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.binary_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinary_type([NotNull] SqlParser.Binary_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.value_expression_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue_expression_primary([NotNull] SqlParser.Value_expression_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.value_expression_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue_expression_primary([NotNull] SqlParser.Value_expression_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.parenthesized_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesized_value_expression([NotNull] SqlParser.Parenthesized_value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.parenthesized_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesized_value_expression([NotNull] SqlParser.Parenthesized_value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.nonparenthesized_value_expression_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonparenthesized_value_expression_primary([NotNull] SqlParser.Nonparenthesized_value_expression_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.nonparenthesized_value_expression_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonparenthesized_value_expression_primary([NotNull] SqlParser.Nonparenthesized_value_expression_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unsigned_value_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsigned_value_specification([NotNull] SqlParser.Unsigned_value_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unsigned_value_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsigned_value_specification([NotNull] SqlParser.Unsigned_value_specificationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unsigned_numeric_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnsigned_numeric_literal([NotNull] SqlParser.Unsigned_numeric_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unsigned_numeric_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnsigned_numeric_literal([NotNull] SqlParser.Unsigned_numeric_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.signed_numerical_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSigned_numerical_literal([NotNull] SqlParser.Signed_numerical_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.signed_numerical_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSigned_numerical_literal([NotNull] SqlParser.Signed_numerical_literalContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.set_function_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_function_specification([NotNull] SqlParser.Set_function_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.set_function_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_function_specification([NotNull] SqlParser.Set_function_specificationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.aggregate_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregate_function([NotNull] SqlParser.Aggregate_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.aggregate_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregate_function([NotNull] SqlParser.Aggregate_functionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.general_set_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneral_set_function([NotNull] SqlParser.General_set_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.general_set_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneral_set_function([NotNull] SqlParser.General_set_functionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.set_function_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_function_type([NotNull] SqlParser.Set_function_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.set_function_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_function_type([NotNull] SqlParser.Set_function_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.filter_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilter_clause([NotNull] SqlParser.Filter_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.filter_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilter_clause([NotNull] SqlParser.Filter_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.grouping_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrouping_operation([NotNull] SqlParser.Grouping_operationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.grouping_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrouping_operation([NotNull] SqlParser.Grouping_operationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.case_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_expression([NotNull] SqlParser.Case_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.case_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_expression([NotNull] SqlParser.Case_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.case_abbreviation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_abbreviation([NotNull] SqlParser.Case_abbreviationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.case_abbreviation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_abbreviation([NotNull] SqlParser.Case_abbreviationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.case_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_specification([NotNull] SqlParser.Case_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.case_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_specification([NotNull] SqlParser.Case_specificationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.simple_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_case([NotNull] SqlParser.Simple_caseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.simple_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_case([NotNull] SqlParser.Simple_caseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.searched_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSearched_case([NotNull] SqlParser.Searched_caseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.searched_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSearched_case([NotNull] SqlParser.Searched_caseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.simple_when_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_when_clause([NotNull] SqlParser.Simple_when_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.simple_when_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_when_clause([NotNull] SqlParser.Simple_when_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.searched_when_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSearched_when_clause([NotNull] SqlParser.Searched_when_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.searched_when_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSearched_when_clause([NotNull] SqlParser.Searched_when_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.else_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_clause([NotNull] SqlParser.Else_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.else_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_clause([NotNull] SqlParser.Else_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResult([NotNull] SqlParser.ResultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResult([NotNull] SqlParser.ResultContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cast_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast_specification([NotNull] SqlParser.Cast_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cast_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast_specification([NotNull] SqlParser.Cast_specificationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cast_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast_operand([NotNull] SqlParser.Cast_operandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cast_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast_operand([NotNull] SqlParser.Cast_operandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cast_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast_target([NotNull] SqlParser.Cast_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cast_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast_target([NotNull] SqlParser.Cast_targetContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue_expression([NotNull] SqlParser.Value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue_expression([NotNull] SqlParser.Value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.common_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommon_value_expression([NotNull] SqlParser.Common_value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.common_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommon_value_expression([NotNull] SqlParser.Common_value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.numeric_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_value_expression([NotNull] SqlParser.Numeric_value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.numeric_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_value_expression([NotNull] SqlParser.Numeric_value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] SqlParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] SqlParser.TermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] SqlParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] SqlParser.FactorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] SqlParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] SqlParser.ArrayContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.numeric_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_primary([NotNull] SqlParser.Numeric_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.numeric_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_primary([NotNull] SqlParser.Numeric_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSign([NotNull] SqlParser.SignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSign([NotNull] SqlParser.SignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.numeric_value_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_value_function([NotNull] SqlParser.Numeric_value_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.numeric_value_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_value_function([NotNull] SqlParser.Numeric_value_functionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.extract_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtract_expression([NotNull] SqlParser.Extract_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.extract_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtract_expression([NotNull] SqlParser.Extract_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.extract_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtract_field([NotNull] SqlParser.Extract_fieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.extract_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtract_field([NotNull] SqlParser.Extract_fieldContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.time_zone_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTime_zone_field([NotNull] SqlParser.Time_zone_fieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.time_zone_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTime_zone_field([NotNull] SqlParser.Time_zone_fieldContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.extract_source"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtract_source([NotNull] SqlParser.Extract_sourceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.extract_source"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtract_source([NotNull] SqlParser.Extract_sourceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.string_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_value_expression([NotNull] SqlParser.String_value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.string_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_value_expression([NotNull] SqlParser.String_value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.character_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter_value_expression([NotNull] SqlParser.Character_value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.character_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter_value_expression([NotNull] SqlParser.Character_value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.character_factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter_factor([NotNull] SqlParser.Character_factorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.character_factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter_factor([NotNull] SqlParser.Character_factorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.character_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter_primary([NotNull] SqlParser.Character_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.character_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter_primary([NotNull] SqlParser.Character_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.string_value_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_value_function([NotNull] SqlParser.String_value_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.string_value_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_value_function([NotNull] SqlParser.String_value_functionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.trim_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrim_function([NotNull] SqlParser.Trim_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.trim_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrim_function([NotNull] SqlParser.Trim_functionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.trim_operands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrim_operands([NotNull] SqlParser.Trim_operandsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.trim_operands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrim_operands([NotNull] SqlParser.Trim_operandsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.trim_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrim_specification([NotNull] SqlParser.Trim_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.trim_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrim_specification([NotNull] SqlParser.Trim_specificationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_value_expression([NotNull] SqlParser.Boolean_value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_value_expression([NotNull] SqlParser.Boolean_value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.or_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr_predicate([NotNull] SqlParser.Or_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.or_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr_predicate([NotNull] SqlParser.Or_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.and_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_predicate([NotNull] SqlParser.And_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.and_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_predicate([NotNull] SqlParser.And_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_factor([NotNull] SqlParser.Boolean_factorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_factor([NotNull] SqlParser.Boolean_factorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_test"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_test([NotNull] SqlParser.Boolean_testContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_test"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_test([NotNull] SqlParser.Boolean_testContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.is_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIs_clause([NotNull] SqlParser.Is_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.is_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIs_clause([NotNull] SqlParser.Is_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.truth_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTruth_value([NotNull] SqlParser.Truth_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.truth_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTruth_value([NotNull] SqlParser.Truth_valueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_primary([NotNull] SqlParser.Boolean_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_primary([NotNull] SqlParser.Boolean_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_predicand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_predicand([NotNull] SqlParser.Boolean_predicandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_predicand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_predicand([NotNull] SqlParser.Boolean_predicandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.parenthesized_boolean_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesized_boolean_value_expression([NotNull] SqlParser.Parenthesized_boolean_value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.parenthesized_boolean_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesized_boolean_value_expression([NotNull] SqlParser.Parenthesized_boolean_value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow_value_expression([NotNull] SqlParser.Row_value_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow_value_expression([NotNull] SqlParser.Row_value_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_special_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow_value_special_case([NotNull] SqlParser.Row_value_special_caseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_special_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow_value_special_case([NotNull] SqlParser.Row_value_special_caseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.explicit_row_value_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_row_value_constructor([NotNull] SqlParser.Explicit_row_value_constructorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.explicit_row_value_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_row_value_constructor([NotNull] SqlParser.Explicit_row_value_constructorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_predicand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow_value_predicand([NotNull] SqlParser.Row_value_predicandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_predicand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow_value_predicand([NotNull] SqlParser.Row_value_predicandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_constructor_predicand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow_value_constructor_predicand([NotNull] SqlParser.Row_value_constructor_predicandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_constructor_predicand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow_value_constructor_predicand([NotNull] SqlParser.Row_value_constructor_predicandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_expression([NotNull] SqlParser.Table_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_expression([NotNull] SqlParser.Table_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.from_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrom_clause([NotNull] SqlParser.From_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.from_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrom_clause([NotNull] SqlParser.From_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_reference_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_reference_list([NotNull] SqlParser.Table_reference_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_reference_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_reference_list([NotNull] SqlParser.Table_reference_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_reference([NotNull] SqlParser.Table_referenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_reference([NotNull] SqlParser.Table_referenceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.joined_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoined_table([NotNull] SqlParser.Joined_tableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.joined_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoined_table([NotNull] SqlParser.Joined_tableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.joined_table_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoined_table_primary([NotNull] SqlParser.Joined_table_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.joined_table_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoined_table_primary([NotNull] SqlParser.Joined_table_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cross_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCross_join([NotNull] SqlParser.Cross_joinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cross_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCross_join([NotNull] SqlParser.Cross_joinContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.qualified_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_join([NotNull] SqlParser.Qualified_joinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.qualified_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_join([NotNull] SqlParser.Qualified_joinContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.natural_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNatural_join([NotNull] SqlParser.Natural_joinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.natural_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNatural_join([NotNull] SqlParser.Natural_joinContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.union_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnion_join([NotNull] SqlParser.Union_joinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.union_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnion_join([NotNull] SqlParser.Union_joinContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoin_type([NotNull] SqlParser.Join_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoin_type([NotNull] SqlParser.Join_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.outer_join_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOuter_join_type([NotNull] SqlParser.Outer_join_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.outer_join_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOuter_join_type([NotNull] SqlParser.Outer_join_typeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.outer_join_type_part2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOuter_join_type_part2([NotNull] SqlParser.Outer_join_type_part2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.outer_join_type_part2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOuter_join_type_part2([NotNull] SqlParser.Outer_join_type_part2Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoin_specification([NotNull] SqlParser.Join_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoin_specification([NotNull] SqlParser.Join_specificationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoin_condition([NotNull] SqlParser.Join_conditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoin_condition([NotNull] SqlParser.Join_conditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.named_columns_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamed_columns_join([NotNull] SqlParser.Named_columns_joinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.named_columns_join"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamed_columns_join([NotNull] SqlParser.Named_columns_joinContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_primary([NotNull] SqlParser.Table_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_primary([NotNull] SqlParser.Table_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_name_list([NotNull] SqlParser.Column_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_name_list([NotNull] SqlParser.Column_name_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.derived_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDerived_table([NotNull] SqlParser.Derived_tableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.derived_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDerived_table([NotNull] SqlParser.Derived_tableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_clause([NotNull] SqlParser.Where_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_clause([NotNull] SqlParser.Where_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.search_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSearch_condition([NotNull] SqlParser.Search_conditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.search_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSearch_condition([NotNull] SqlParser.Search_conditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.groupby_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupby_clause([NotNull] SqlParser.Groupby_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.groupby_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupby_clause([NotNull] SqlParser.Groupby_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.grouping_element_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrouping_element_list([NotNull] SqlParser.Grouping_element_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.grouping_element_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrouping_element_list([NotNull] SqlParser.Grouping_element_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.grouping_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrouping_element([NotNull] SqlParser.Grouping_elementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.grouping_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrouping_element([NotNull] SqlParser.Grouping_elementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.ordinary_grouping_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrdinary_grouping_set([NotNull] SqlParser.Ordinary_grouping_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.ordinary_grouping_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrdinary_grouping_set([NotNull] SqlParser.Ordinary_grouping_setContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.ordinary_grouping_set_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrdinary_grouping_set_list([NotNull] SqlParser.Ordinary_grouping_set_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.ordinary_grouping_set_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrdinary_grouping_set_list([NotNull] SqlParser.Ordinary_grouping_set_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.rollup_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRollup_list([NotNull] SqlParser.Rollup_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.rollup_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRollup_list([NotNull] SqlParser.Rollup_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cube_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCube_list([NotNull] SqlParser.Cube_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cube_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCube_list([NotNull] SqlParser.Cube_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.empty_grouping_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmpty_grouping_set([NotNull] SqlParser.Empty_grouping_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.empty_grouping_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmpty_grouping_set([NotNull] SqlParser.Empty_grouping_setContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.having_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHaving_clause([NotNull] SqlParser.Having_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.having_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHaving_clause([NotNull] SqlParser.Having_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_predicand_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow_value_predicand_list([NotNull] SqlParser.Row_value_predicand_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_predicand_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow_value_predicand_list([NotNull] SqlParser.Row_value_predicand_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_expression([NotNull] SqlParser.Query_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_expression([NotNull] SqlParser.Query_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_expression_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_expression_body([NotNull] SqlParser.Query_expression_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_expression_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_expression_body([NotNull] SqlParser.Query_expression_bodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.non_join_query_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_join_query_expression([NotNull] SqlParser.Non_join_query_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.non_join_query_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_join_query_expression([NotNull] SqlParser.Non_join_query_expressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_term([NotNull] SqlParser.Query_termContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_term([NotNull] SqlParser.Query_termContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.non_join_query_term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_join_query_term([NotNull] SqlParser.Non_join_query_termContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.non_join_query_term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_join_query_term([NotNull] SqlParser.Non_join_query_termContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_primary([NotNull] SqlParser.Query_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_primary([NotNull] SqlParser.Query_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.non_join_query_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_join_query_primary([NotNull] SqlParser.Non_join_query_primaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.non_join_query_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_join_query_primary([NotNull] SqlParser.Non_join_query_primaryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.simple_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimple_table([NotNull] SqlParser.Simple_tableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.simple_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimple_table([NotNull] SqlParser.Simple_tableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.explicit_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_table([NotNull] SqlParser.Explicit_tableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.explicit_table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_table([NotNull] SqlParser.Explicit_tableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_or_query_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_or_query_name([NotNull] SqlParser.Table_or_query_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_or_query_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_or_query_name([NotNull] SqlParser.Table_or_query_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_name([NotNull] SqlParser.Table_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_name([NotNull] SqlParser.Table_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_specification([NotNull] SqlParser.Query_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_specification([NotNull] SqlParser.Query_specificationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.select_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_list([NotNull] SqlParser.Select_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.select_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_list([NotNull] SqlParser.Select_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.select_sublist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_sublist([NotNull] SqlParser.Select_sublistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.select_sublist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_sublist([NotNull] SqlParser.Select_sublistContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.derived_column"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDerived_column([NotNull] SqlParser.Derived_columnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.derived_column"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDerived_column([NotNull] SqlParser.Derived_columnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.qualified_asterisk"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_asterisk([NotNull] SqlParser.Qualified_asteriskContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.qualified_asterisk"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_asterisk([NotNull] SqlParser.Qualified_asteriskContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.set_qualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSet_qualifier([NotNull] SqlParser.Set_qualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.set_qualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSet_qualifier([NotNull] SqlParser.Set_qualifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_reference([NotNull] SqlParser.Column_referenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_reference([NotNull] SqlParser.Column_referenceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.as_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAs_clause([NotNull] SqlParser.As_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.as_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAs_clause([NotNull] SqlParser.As_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_reference_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_reference_list([NotNull] SqlParser.Column_reference_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_reference_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_reference_list([NotNull] SqlParser.Column_reference_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.scalar_subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_subquery([NotNull] SqlParser.Scalar_subqueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.scalar_subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_subquery([NotNull] SqlParser.Scalar_subqueryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRow_subquery([NotNull] SqlParser.Row_subqueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRow_subquery([NotNull] SqlParser.Row_subqueryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable_subquery([NotNull] SqlParser.Table_subqueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable_subquery([NotNull] SqlParser.Table_subqueryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubquery([NotNull] SqlParser.SubqueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubquery([NotNull] SqlParser.SubqueryContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicate([NotNull] SqlParser.PredicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicate([NotNull] SqlParser.PredicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_predicate([NotNull] SqlParser.Comparison_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_predicate([NotNull] SqlParser.Comparison_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.comp_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp_op([NotNull] SqlParser.Comp_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.comp_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp_op([NotNull] SqlParser.Comp_opContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.between_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBetween_predicate([NotNull] SqlParser.Between_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.between_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBetween_predicate([NotNull] SqlParser.Between_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.between_predicate_part_2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBetween_predicate_part_2([NotNull] SqlParser.Between_predicate_part_2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.between_predicate_part_2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBetween_predicate_part_2([NotNull] SqlParser.Between_predicate_part_2Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.in_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIn_predicate([NotNull] SqlParser.In_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.in_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIn_predicate([NotNull] SqlParser.In_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.in_predicate_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIn_predicate_value([NotNull] SqlParser.In_predicate_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.in_predicate_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIn_predicate_value([NotNull] SqlParser.In_predicate_valueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.in_value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIn_value_list([NotNull] SqlParser.In_value_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.in_value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIn_value_list([NotNull] SqlParser.In_value_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.pattern_matching_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPattern_matching_predicate([NotNull] SqlParser.Pattern_matching_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.pattern_matching_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPattern_matching_predicate([NotNull] SqlParser.Pattern_matching_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.pattern_matcher"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPattern_matcher([NotNull] SqlParser.Pattern_matcherContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.pattern_matcher"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPattern_matcher([NotNull] SqlParser.Pattern_matcherContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.negativable_matcher"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegativable_matcher([NotNull] SqlParser.Negativable_matcherContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.negativable_matcher"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegativable_matcher([NotNull] SqlParser.Negativable_matcherContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.regex_matcher"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRegex_matcher([NotNull] SqlParser.Regex_matcherContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.regex_matcher"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRegex_matcher([NotNull] SqlParser.Regex_matcherContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.null_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNull_predicate([NotNull] SqlParser.Null_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.null_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNull_predicate([NotNull] SqlParser.Null_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.quantified_comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuantified_comparison_predicate([NotNull] SqlParser.Quantified_comparison_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.quantified_comparison_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuantified_comparison_predicate([NotNull] SqlParser.Quantified_comparison_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.quantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuantifier([NotNull] SqlParser.QuantifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.quantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuantifier([NotNull] SqlParser.QuantifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.all"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAll([NotNull] SqlParser.AllContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.all"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAll([NotNull] SqlParser.AllContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.some"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSome([NotNull] SqlParser.SomeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.some"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSome([NotNull] SqlParser.SomeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.exists_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExists_predicate([NotNull] SqlParser.Exists_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.exists_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExists_predicate([NotNull] SqlParser.Exists_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unique_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnique_predicate([NotNull] SqlParser.Unique_predicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unique_predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnique_predicate([NotNull] SqlParser.Unique_predicateContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.primary_datetime_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_datetime_field([NotNull] SqlParser.Primary_datetime_fieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.primary_datetime_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_datetime_field([NotNull] SqlParser.Primary_datetime_fieldContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.non_second_primary_datetime_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_second_primary_datetime_field([NotNull] SqlParser.Non_second_primary_datetime_fieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.non_second_primary_datetime_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_second_primary_datetime_field([NotNull] SqlParser.Non_second_primary_datetime_fieldContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.extended_datetime_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtended_datetime_field([NotNull] SqlParser.Extended_datetime_fieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.extended_datetime_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtended_datetime_field([NotNull] SqlParser.Extended_datetime_fieldContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.routine_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoutine_invocation([NotNull] SqlParser.Routine_invocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.routine_invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoutine_invocation([NotNull] SqlParser.Routine_invocationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.function_names_for_reserved_words"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_names_for_reserved_words([NotNull] SqlParser.Function_names_for_reserved_wordsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.function_names_for_reserved_words"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_names_for_reserved_words([NotNull] SqlParser.Function_names_for_reserved_wordsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_name([NotNull] SqlParser.Function_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_name([NotNull] SqlParser.Function_nameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sql_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSql_argument_list([NotNull] SqlParser.Sql_argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sql_argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSql_argument_list([NotNull] SqlParser.Sql_argument_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.orderby_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderby_clause([NotNull] SqlParser.Orderby_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.orderby_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderby_clause([NotNull] SqlParser.Orderby_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sort_specifier_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSort_specifier_list([NotNull] SqlParser.Sort_specifier_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sort_specifier_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSort_specifier_list([NotNull] SqlParser.Sort_specifier_listContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sort_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSort_specifier([NotNull] SqlParser.Sort_specifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sort_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSort_specifier([NotNull] SqlParser.Sort_specifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.order_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrder_specification([NotNull] SqlParser.Order_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.order_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrder_specification([NotNull] SqlParser.Order_specificationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.limit_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLimit_clause([NotNull] SqlParser.Limit_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.limit_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLimit_clause([NotNull] SqlParser.Limit_clauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.null_ordering"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNull_ordering([NotNull] SqlParser.Null_orderingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.null_ordering"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNull_ordering([NotNull] SqlParser.Null_orderingContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.insert_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsert_statement([NotNull] SqlParser.Insert_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.insert_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsert_statement([NotNull] SqlParser.Insert_statementContext context);
}
} // namespace Mlo.Examples.Parsers
