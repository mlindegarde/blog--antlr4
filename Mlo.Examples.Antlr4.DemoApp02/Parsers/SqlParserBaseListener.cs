//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\My Dev\mlo\Mlo.Examples.Antlr4\Mlo.Examples.Antlr4.SqlParserExample01\SqlParser.g4 by ANTLR 4.5.3

// Unreachable code detected

using Antlr4.Runtime;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;

#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Mlo.Examples.Antlr4.DemoApp02.Parsers {

/// <summary>
/// This class provides an empty implementation of <see cref="ISqlParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class SqlParserBaseListener : ISqlParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sql"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql([NotNull] SqlParser.SqlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sql"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql([NotNull] SqlParser.SqlContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] SqlParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] SqlParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.data_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterData_statement([NotNull] SqlParser.Data_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.data_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitData_statement([NotNull] SqlParser.Data_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.data_change_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterData_change_statement([NotNull] SqlParser.Data_change_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.data_change_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitData_change_statement([NotNull] SqlParser.Data_change_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.schema_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSchema_statement([NotNull] SqlParser.Schema_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.schema_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSchema_statement([NotNull] SqlParser.Schema_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.index_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_statement([NotNull] SqlParser.Index_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.index_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_statement([NotNull] SqlParser.Index_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.create_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_table_statement([NotNull] SqlParser.Create_table_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.create_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_table_statement([NotNull] SqlParser.Create_table_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_elements([NotNull] SqlParser.Table_elementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_elements([NotNull] SqlParser.Table_elementsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.field_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_element([NotNull] SqlParser.Field_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.field_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_element([NotNull] SqlParser.Field_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.field_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_type([NotNull] SqlParser.Field_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.field_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_type([NotNull] SqlParser.Field_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.param_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_clause([NotNull] SqlParser.Param_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.param_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_clause([NotNull] SqlParser.Param_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] SqlParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] SqlParser.ParamContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.method_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_specifier([NotNull] SqlParser.Method_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.method_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_specifier([NotNull] SqlParser.Method_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_space_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_space_specifier([NotNull] SqlParser.Table_space_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_space_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_space_specifier([NotNull] SqlParser.Table_space_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_space_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_space_name([NotNull] SqlParser.Table_space_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_space_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_space_name([NotNull] SqlParser.Table_space_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_partitioning_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_partitioning_clauses([NotNull] SqlParser.Table_partitioning_clausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_partitioning_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_partitioning_clauses([NotNull] SqlParser.Table_partitioning_clausesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.range_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRange_partitions([NotNull] SqlParser.Range_partitionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.range_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRange_partitions([NotNull] SqlParser.Range_partitionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.range_value_clause_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRange_value_clause_list([NotNull] SqlParser.Range_value_clause_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.range_value_clause_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRange_value_clause_list([NotNull] SqlParser.Range_value_clause_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.range_value_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRange_value_clause([NotNull] SqlParser.Range_value_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.range_value_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRange_value_clause([NotNull] SqlParser.Range_value_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.hash_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHash_partitions([NotNull] SqlParser.Hash_partitionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.hash_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHash_partitions([NotNull] SqlParser.Hash_partitionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.individual_hash_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndividual_hash_partitions([NotNull] SqlParser.Individual_hash_partitionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.individual_hash_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndividual_hash_partitions([NotNull] SqlParser.Individual_hash_partitionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.individual_hash_partition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndividual_hash_partition([NotNull] SqlParser.Individual_hash_partitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.individual_hash_partition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndividual_hash_partition([NotNull] SqlParser.Individual_hash_partitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.hash_partitions_by_quantity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHash_partitions_by_quantity([NotNull] SqlParser.Hash_partitions_by_quantityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.hash_partitions_by_quantity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHash_partitions_by_quantity([NotNull] SqlParser.Hash_partitions_by_quantityContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.list_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_partitions([NotNull] SqlParser.List_partitionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.list_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_partitions([NotNull] SqlParser.List_partitionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.list_value_clause_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_value_clause_list([NotNull] SqlParser.List_value_clause_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.list_value_clause_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_value_clause_list([NotNull] SqlParser.List_value_clause_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.list_value_partition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_value_partition([NotNull] SqlParser.List_value_partitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.list_value_partition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_value_partition([NotNull] SqlParser.List_value_partitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_partitions([NotNull] SqlParser.Column_partitionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_partitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_partitions([NotNull] SqlParser.Column_partitionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.partition_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPartition_name([NotNull] SqlParser.Partition_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.partition_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPartition_name([NotNull] SqlParser.Partition_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.drop_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_table_statement([NotNull] SqlParser.Drop_table_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.drop_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_table_statement([NotNull] SqlParser.Drop_table_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] SqlParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] SqlParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.nonreserved_keywords"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonreserved_keywords([NotNull] SqlParser.Nonreserved_keywordsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.nonreserved_keywords"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonreserved_keywords([NotNull] SqlParser.Nonreserved_keywordsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unsigned_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsigned_literal([NotNull] SqlParser.Unsigned_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unsigned_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsigned_literal([NotNull] SqlParser.Unsigned_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.general_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneral_literal([NotNull] SqlParser.General_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.general_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneral_literal([NotNull] SqlParser.General_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.datetime_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatetime_literal([NotNull] SqlParser.Datetime_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.datetime_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatetime_literal([NotNull] SqlParser.Datetime_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.time_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTime_literal([NotNull] SqlParser.Time_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.time_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTime_literal([NotNull] SqlParser.Time_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.timestamp_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimestamp_literal([NotNull] SqlParser.Timestamp_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.timestamp_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimestamp_literal([NotNull] SqlParser.Timestamp_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.date_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDate_literal([NotNull] SqlParser.Date_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.date_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDate_literal([NotNull] SqlParser.Date_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_literal([NotNull] SqlParser.Boolean_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_literal([NotNull] SqlParser.Boolean_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.data_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterData_type([NotNull] SqlParser.Data_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.data_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitData_type([NotNull] SqlParser.Data_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.predefined_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredefined_type([NotNull] SqlParser.Predefined_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.predefined_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredefined_type([NotNull] SqlParser.Predefined_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.network_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNetwork_type([NotNull] SqlParser.Network_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.network_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNetwork_type([NotNull] SqlParser.Network_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.character_string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacter_string_type([NotNull] SqlParser.Character_string_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.character_string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacter_string_type([NotNull] SqlParser.Character_string_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.type_length"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_length([NotNull] SqlParser.Type_lengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.type_length"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_length([NotNull] SqlParser.Type_lengthContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.national_character_string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNational_character_string_type([NotNull] SqlParser.National_character_string_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.national_character_string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNational_character_string_type([NotNull] SqlParser.National_character_string_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.binary_large_object_string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinary_large_object_string_type([NotNull] SqlParser.Binary_large_object_string_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.binary_large_object_string_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinary_large_object_string_type([NotNull] SqlParser.Binary_large_object_string_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_type([NotNull] SqlParser.Numeric_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_type([NotNull] SqlParser.Numeric_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.exact_numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExact_numeric_type([NotNull] SqlParser.Exact_numeric_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.exact_numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExact_numeric_type([NotNull] SqlParser.Exact_numeric_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.approximate_numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterApproximate_numeric_type([NotNull] SqlParser.Approximate_numeric_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.approximate_numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitApproximate_numeric_type([NotNull] SqlParser.Approximate_numeric_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.precision_param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrecision_param([NotNull] SqlParser.Precision_paramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.precision_param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrecision_param([NotNull] SqlParser.Precision_paramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_type([NotNull] SqlParser.Boolean_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_type([NotNull] SqlParser.Boolean_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.datetime_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatetime_type([NotNull] SqlParser.Datetime_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.datetime_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatetime_type([NotNull] SqlParser.Datetime_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.bit_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBit_type([NotNull] SqlParser.Bit_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.bit_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBit_type([NotNull] SqlParser.Bit_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.binary_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinary_type([NotNull] SqlParser.Binary_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.binary_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinary_type([NotNull] SqlParser.Binary_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.value_expression_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue_expression_primary([NotNull] SqlParser.Value_expression_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.value_expression_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue_expression_primary([NotNull] SqlParser.Value_expression_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.parenthesized_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesized_value_expression([NotNull] SqlParser.Parenthesized_value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.parenthesized_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesized_value_expression([NotNull] SqlParser.Parenthesized_value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.nonparenthesized_value_expression_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonparenthesized_value_expression_primary([NotNull] SqlParser.Nonparenthesized_value_expression_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.nonparenthesized_value_expression_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonparenthesized_value_expression_primary([NotNull] SqlParser.Nonparenthesized_value_expression_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unsigned_value_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsigned_value_specification([NotNull] SqlParser.Unsigned_value_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unsigned_value_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsigned_value_specification([NotNull] SqlParser.Unsigned_value_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unsigned_numeric_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsigned_numeric_literal([NotNull] SqlParser.Unsigned_numeric_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unsigned_numeric_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsigned_numeric_literal([NotNull] SqlParser.Unsigned_numeric_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.signed_numerical_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSigned_numerical_literal([NotNull] SqlParser.Signed_numerical_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.signed_numerical_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSigned_numerical_literal([NotNull] SqlParser.Signed_numerical_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.set_function_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_function_specification([NotNull] SqlParser.Set_function_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.set_function_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_function_specification([NotNull] SqlParser.Set_function_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.aggregate_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregate_function([NotNull] SqlParser.Aggregate_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.aggregate_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregate_function([NotNull] SqlParser.Aggregate_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.general_set_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneral_set_function([NotNull] SqlParser.General_set_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.general_set_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneral_set_function([NotNull] SqlParser.General_set_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.set_function_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_function_type([NotNull] SqlParser.Set_function_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.set_function_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_function_type([NotNull] SqlParser.Set_function_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.filter_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilter_clause([NotNull] SqlParser.Filter_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.filter_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilter_clause([NotNull] SqlParser.Filter_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.grouping_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrouping_operation([NotNull] SqlParser.Grouping_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.grouping_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrouping_operation([NotNull] SqlParser.Grouping_operationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.case_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_expression([NotNull] SqlParser.Case_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.case_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_expression([NotNull] SqlParser.Case_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.case_abbreviation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_abbreviation([NotNull] SqlParser.Case_abbreviationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.case_abbreviation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_abbreviation([NotNull] SqlParser.Case_abbreviationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.case_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_specification([NotNull] SqlParser.Case_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.case_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_specification([NotNull] SqlParser.Case_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.simple_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_case([NotNull] SqlParser.Simple_caseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.simple_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_case([NotNull] SqlParser.Simple_caseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.searched_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSearched_case([NotNull] SqlParser.Searched_caseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.searched_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSearched_case([NotNull] SqlParser.Searched_caseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.simple_when_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_when_clause([NotNull] SqlParser.Simple_when_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.simple_when_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_when_clause([NotNull] SqlParser.Simple_when_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.searched_when_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSearched_when_clause([NotNull] SqlParser.Searched_when_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.searched_when_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSearched_when_clause([NotNull] SqlParser.Searched_when_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_clause([NotNull] SqlParser.Else_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_clause([NotNull] SqlParser.Else_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.result"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResult([NotNull] SqlParser.ResultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.result"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResult([NotNull] SqlParser.ResultContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cast_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast_specification([NotNull] SqlParser.Cast_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cast_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast_specification([NotNull] SqlParser.Cast_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cast_operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast_operand([NotNull] SqlParser.Cast_operandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cast_operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast_operand([NotNull] SqlParser.Cast_operandContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cast_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast_target([NotNull] SqlParser.Cast_targetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cast_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast_target([NotNull] SqlParser.Cast_targetContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue_expression([NotNull] SqlParser.Value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue_expression([NotNull] SqlParser.Value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.common_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommon_value_expression([NotNull] SqlParser.Common_value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.common_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommon_value_expression([NotNull] SqlParser.Common_value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.numeric_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_value_expression([NotNull] SqlParser.Numeric_value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.numeric_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_value_expression([NotNull] SqlParser.Numeric_value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] SqlParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] SqlParser.TermContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] SqlParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] SqlParser.FactorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray([NotNull] SqlParser.ArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray([NotNull] SqlParser.ArrayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.numeric_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_primary([NotNull] SqlParser.Numeric_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.numeric_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_primary([NotNull] SqlParser.Numeric_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSign([NotNull] SqlParser.SignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSign([NotNull] SqlParser.SignContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.numeric_value_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_value_function([NotNull] SqlParser.Numeric_value_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.numeric_value_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_value_function([NotNull] SqlParser.Numeric_value_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.extract_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtract_expression([NotNull] SqlParser.Extract_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.extract_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtract_expression([NotNull] SqlParser.Extract_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.extract_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtract_field([NotNull] SqlParser.Extract_fieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.extract_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtract_field([NotNull] SqlParser.Extract_fieldContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.time_zone_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTime_zone_field([NotNull] SqlParser.Time_zone_fieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.time_zone_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTime_zone_field([NotNull] SqlParser.Time_zone_fieldContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.extract_source"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtract_source([NotNull] SqlParser.Extract_sourceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.extract_source"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtract_source([NotNull] SqlParser.Extract_sourceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.string_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_value_expression([NotNull] SqlParser.String_value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.string_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_value_expression([NotNull] SqlParser.String_value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.character_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacter_value_expression([NotNull] SqlParser.Character_value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.character_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacter_value_expression([NotNull] SqlParser.Character_value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.character_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacter_factor([NotNull] SqlParser.Character_factorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.character_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacter_factor([NotNull] SqlParser.Character_factorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.character_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacter_primary([NotNull] SqlParser.Character_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.character_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacter_primary([NotNull] SqlParser.Character_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.string_value_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_value_function([NotNull] SqlParser.String_value_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.string_value_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_value_function([NotNull] SqlParser.String_value_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.trim_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrim_function([NotNull] SqlParser.Trim_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.trim_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrim_function([NotNull] SqlParser.Trim_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.trim_operands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrim_operands([NotNull] SqlParser.Trim_operandsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.trim_operands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrim_operands([NotNull] SqlParser.Trim_operandsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.trim_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrim_specification([NotNull] SqlParser.Trim_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.trim_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrim_specification([NotNull] SqlParser.Trim_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_value_expression([NotNull] SqlParser.Boolean_value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_value_expression([NotNull] SqlParser.Boolean_value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.or_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr_predicate([NotNull] SqlParser.Or_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.or_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr_predicate([NotNull] SqlParser.Or_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.and_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_predicate([NotNull] SqlParser.And_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.and_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_predicate([NotNull] SqlParser.And_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_factor([NotNull] SqlParser.Boolean_factorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_factor([NotNull] SqlParser.Boolean_factorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_test"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_test([NotNull] SqlParser.Boolean_testContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_test"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_test([NotNull] SqlParser.Boolean_testContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.is_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIs_clause([NotNull] SqlParser.Is_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.is_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIs_clause([NotNull] SqlParser.Is_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.truth_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTruth_value([NotNull] SqlParser.Truth_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.truth_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTruth_value([NotNull] SqlParser.Truth_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_primary([NotNull] SqlParser.Boolean_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_primary([NotNull] SqlParser.Boolean_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.boolean_predicand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_predicand([NotNull] SqlParser.Boolean_predicandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.boolean_predicand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_predicand([NotNull] SqlParser.Boolean_predicandContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.parenthesized_boolean_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesized_boolean_value_expression([NotNull] SqlParser.Parenthesized_boolean_value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.parenthesized_boolean_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesized_boolean_value_expression([NotNull] SqlParser.Parenthesized_boolean_value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRow_value_expression([NotNull] SqlParser.Row_value_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRow_value_expression([NotNull] SqlParser.Row_value_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_special_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRow_value_special_case([NotNull] SqlParser.Row_value_special_caseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_special_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRow_value_special_case([NotNull] SqlParser.Row_value_special_caseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.explicit_row_value_constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicit_row_value_constructor([NotNull] SqlParser.Explicit_row_value_constructorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.explicit_row_value_constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicit_row_value_constructor([NotNull] SqlParser.Explicit_row_value_constructorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_predicand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRow_value_predicand([NotNull] SqlParser.Row_value_predicandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_predicand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRow_value_predicand([NotNull] SqlParser.Row_value_predicandContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_constructor_predicand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRow_value_constructor_predicand([NotNull] SqlParser.Row_value_constructor_predicandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_constructor_predicand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRow_value_constructor_predicand([NotNull] SqlParser.Row_value_constructor_predicandContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_expression([NotNull] SqlParser.Table_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_expression([NotNull] SqlParser.Table_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrom_clause([NotNull] SqlParser.From_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrom_clause([NotNull] SqlParser.From_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_reference_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_reference_list([NotNull] SqlParser.Table_reference_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_reference_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_reference_list([NotNull] SqlParser.Table_reference_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_reference([NotNull] SqlParser.Table_referenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_reference([NotNull] SqlParser.Table_referenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.joined_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoined_table([NotNull] SqlParser.Joined_tableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.joined_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoined_table([NotNull] SqlParser.Joined_tableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.joined_table_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoined_table_primary([NotNull] SqlParser.Joined_table_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.joined_table_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoined_table_primary([NotNull] SqlParser.Joined_table_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cross_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCross_join([NotNull] SqlParser.Cross_joinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cross_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCross_join([NotNull] SqlParser.Cross_joinContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.qualified_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_join([NotNull] SqlParser.Qualified_joinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.qualified_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_join([NotNull] SqlParser.Qualified_joinContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.natural_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNatural_join([NotNull] SqlParser.Natural_joinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.natural_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNatural_join([NotNull] SqlParser.Natural_joinContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.union_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnion_join([NotNull] SqlParser.Union_joinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.union_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnion_join([NotNull] SqlParser.Union_joinContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_type([NotNull] SqlParser.Join_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_type([NotNull] SqlParser.Join_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.outer_join_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOuter_join_type([NotNull] SqlParser.Outer_join_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.outer_join_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOuter_join_type([NotNull] SqlParser.Outer_join_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.outer_join_type_part2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOuter_join_type_part2([NotNull] SqlParser.Outer_join_type_part2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.outer_join_type_part2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOuter_join_type_part2([NotNull] SqlParser.Outer_join_type_part2Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_specification([NotNull] SqlParser.Join_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_specification([NotNull] SqlParser.Join_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_condition([NotNull] SqlParser.Join_conditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_condition([NotNull] SqlParser.Join_conditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.named_columns_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamed_columns_join([NotNull] SqlParser.Named_columns_joinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.named_columns_join"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamed_columns_join([NotNull] SqlParser.Named_columns_joinContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_primary([NotNull] SqlParser.Table_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_primary([NotNull] SqlParser.Table_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_name_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_name_list([NotNull] SqlParser.Column_name_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_name_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_name_list([NotNull] SqlParser.Column_name_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.derived_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDerived_table([NotNull] SqlParser.Derived_tableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.derived_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDerived_table([NotNull] SqlParser.Derived_tableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_clause([NotNull] SqlParser.Where_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_clause([NotNull] SqlParser.Where_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.search_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSearch_condition([NotNull] SqlParser.Search_conditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.search_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSearch_condition([NotNull] SqlParser.Search_conditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.groupby_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupby_clause([NotNull] SqlParser.Groupby_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.groupby_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupby_clause([NotNull] SqlParser.Groupby_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.grouping_element_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrouping_element_list([NotNull] SqlParser.Grouping_element_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.grouping_element_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrouping_element_list([NotNull] SqlParser.Grouping_element_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.grouping_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrouping_element([NotNull] SqlParser.Grouping_elementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.grouping_element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrouping_element([NotNull] SqlParser.Grouping_elementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.ordinary_grouping_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrdinary_grouping_set([NotNull] SqlParser.Ordinary_grouping_setContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.ordinary_grouping_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrdinary_grouping_set([NotNull] SqlParser.Ordinary_grouping_setContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.ordinary_grouping_set_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrdinary_grouping_set_list([NotNull] SqlParser.Ordinary_grouping_set_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.ordinary_grouping_set_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrdinary_grouping_set_list([NotNull] SqlParser.Ordinary_grouping_set_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.rollup_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRollup_list([NotNull] SqlParser.Rollup_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.rollup_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRollup_list([NotNull] SqlParser.Rollup_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cube_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCube_list([NotNull] SqlParser.Cube_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cube_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCube_list([NotNull] SqlParser.Cube_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.empty_grouping_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmpty_grouping_set([NotNull] SqlParser.Empty_grouping_setContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.empty_grouping_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmpty_grouping_set([NotNull] SqlParser.Empty_grouping_setContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.having_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHaving_clause([NotNull] SqlParser.Having_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.having_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHaving_clause([NotNull] SqlParser.Having_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_value_predicand_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRow_value_predicand_list([NotNull] SqlParser.Row_value_predicand_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_value_predicand_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRow_value_predicand_list([NotNull] SqlParser.Row_value_predicand_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_expression([NotNull] SqlParser.Query_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_expression([NotNull] SqlParser.Query_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_expression_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_expression_body([NotNull] SqlParser.Query_expression_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_expression_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_expression_body([NotNull] SqlParser.Query_expression_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.non_join_query_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNon_join_query_expression([NotNull] SqlParser.Non_join_query_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.non_join_query_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNon_join_query_expression([NotNull] SqlParser.Non_join_query_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_term([NotNull] SqlParser.Query_termContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_term([NotNull] SqlParser.Query_termContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.non_join_query_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNon_join_query_term([NotNull] SqlParser.Non_join_query_termContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.non_join_query_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNon_join_query_term([NotNull] SqlParser.Non_join_query_termContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_primary([NotNull] SqlParser.Query_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_primary([NotNull] SqlParser.Query_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.non_join_query_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNon_join_query_primary([NotNull] SqlParser.Non_join_query_primaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.non_join_query_primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNon_join_query_primary([NotNull] SqlParser.Non_join_query_primaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.simple_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_table([NotNull] SqlParser.Simple_tableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.simple_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_table([NotNull] SqlParser.Simple_tableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.explicit_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicit_table([NotNull] SqlParser.Explicit_tableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.explicit_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicit_table([NotNull] SqlParser.Explicit_tableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_or_query_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_or_query_name([NotNull] SqlParser.Table_or_query_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_or_query_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_or_query_name([NotNull] SqlParser.Table_or_query_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_name([NotNull] SqlParser.Table_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_name([NotNull] SqlParser.Table_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.query_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_specification([NotNull] SqlParser.Query_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.query_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_specification([NotNull] SqlParser.Query_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.select_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_list([NotNull] SqlParser.Select_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.select_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_list([NotNull] SqlParser.Select_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.select_sublist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_sublist([NotNull] SqlParser.Select_sublistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.select_sublist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_sublist([NotNull] SqlParser.Select_sublistContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.derived_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDerived_column([NotNull] SqlParser.Derived_columnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.derived_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDerived_column([NotNull] SqlParser.Derived_columnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.qualified_asterisk"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_asterisk([NotNull] SqlParser.Qualified_asteriskContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.qualified_asterisk"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_asterisk([NotNull] SqlParser.Qualified_asteriskContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.set_qualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_qualifier([NotNull] SqlParser.Set_qualifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.set_qualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_qualifier([NotNull] SqlParser.Set_qualifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_reference([NotNull] SqlParser.Column_referenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_reference([NotNull] SqlParser.Column_referenceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.as_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAs_clause([NotNull] SqlParser.As_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.as_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAs_clause([NotNull] SqlParser.As_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_reference_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_reference_list([NotNull] SqlParser.Column_reference_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_reference_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_reference_list([NotNull] SqlParser.Column_reference_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.scalar_subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScalar_subquery([NotNull] SqlParser.Scalar_subqueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.scalar_subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScalar_subquery([NotNull] SqlParser.Scalar_subqueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.row_subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRow_subquery([NotNull] SqlParser.Row_subqueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.row_subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRow_subquery([NotNull] SqlParser.Row_subqueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_subquery([NotNull] SqlParser.Table_subqueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_subquery([NotNull] SqlParser.Table_subqueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery([NotNull] SqlParser.SubqueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery([NotNull] SqlParser.SubqueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicate([NotNull] SqlParser.PredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicate([NotNull] SqlParser.PredicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.comparison_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison_predicate([NotNull] SqlParser.Comparison_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.comparison_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison_predicate([NotNull] SqlParser.Comparison_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.comp_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComp_op([NotNull] SqlParser.Comp_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.comp_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComp_op([NotNull] SqlParser.Comp_opContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.between_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBetween_predicate([NotNull] SqlParser.Between_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.between_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBetween_predicate([NotNull] SqlParser.Between_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.between_predicate_part_2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBetween_predicate_part_2([NotNull] SqlParser.Between_predicate_part_2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.between_predicate_part_2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBetween_predicate_part_2([NotNull] SqlParser.Between_predicate_part_2Context context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.in_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIn_predicate([NotNull] SqlParser.In_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.in_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIn_predicate([NotNull] SqlParser.In_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.in_predicate_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIn_predicate_value([NotNull] SqlParser.In_predicate_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.in_predicate_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIn_predicate_value([NotNull] SqlParser.In_predicate_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.in_value_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIn_value_list([NotNull] SqlParser.In_value_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.in_value_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIn_value_list([NotNull] SqlParser.In_value_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.pattern_matching_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPattern_matching_predicate([NotNull] SqlParser.Pattern_matching_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.pattern_matching_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPattern_matching_predicate([NotNull] SqlParser.Pattern_matching_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.pattern_matcher"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPattern_matcher([NotNull] SqlParser.Pattern_matcherContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.pattern_matcher"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPattern_matcher([NotNull] SqlParser.Pattern_matcherContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.negativable_matcher"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegativable_matcher([NotNull] SqlParser.Negativable_matcherContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.negativable_matcher"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegativable_matcher([NotNull] SqlParser.Negativable_matcherContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.regex_matcher"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegex_matcher([NotNull] SqlParser.Regex_matcherContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.regex_matcher"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegex_matcher([NotNull] SqlParser.Regex_matcherContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.null_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNull_predicate([NotNull] SqlParser.Null_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.null_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNull_predicate([NotNull] SqlParser.Null_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.quantified_comparison_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantified_comparison_predicate([NotNull] SqlParser.Quantified_comparison_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.quantified_comparison_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantified_comparison_predicate([NotNull] SqlParser.Quantified_comparison_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.quantifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantifier([NotNull] SqlParser.QuantifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.quantifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantifier([NotNull] SqlParser.QuantifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.all"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAll([NotNull] SqlParser.AllContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.all"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAll([NotNull] SqlParser.AllContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.some"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSome([NotNull] SqlParser.SomeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.some"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSome([NotNull] SqlParser.SomeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.exists_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExists_predicate([NotNull] SqlParser.Exists_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.exists_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExists_predicate([NotNull] SqlParser.Exists_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unique_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnique_predicate([NotNull] SqlParser.Unique_predicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unique_predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnique_predicate([NotNull] SqlParser.Unique_predicateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.primary_datetime_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_datetime_field([NotNull] SqlParser.Primary_datetime_fieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.primary_datetime_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_datetime_field([NotNull] SqlParser.Primary_datetime_fieldContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.non_second_primary_datetime_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNon_second_primary_datetime_field([NotNull] SqlParser.Non_second_primary_datetime_fieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.non_second_primary_datetime_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNon_second_primary_datetime_field([NotNull] SqlParser.Non_second_primary_datetime_fieldContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.extended_datetime_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtended_datetime_field([NotNull] SqlParser.Extended_datetime_fieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.extended_datetime_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtended_datetime_field([NotNull] SqlParser.Extended_datetime_fieldContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.routine_invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRoutine_invocation([NotNull] SqlParser.Routine_invocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.routine_invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRoutine_invocation([NotNull] SqlParser.Routine_invocationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.function_names_for_reserved_words"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_names_for_reserved_words([NotNull] SqlParser.Function_names_for_reserved_wordsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.function_names_for_reserved_words"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_names_for_reserved_words([NotNull] SqlParser.Function_names_for_reserved_wordsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_name([NotNull] SqlParser.Function_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_name([NotNull] SqlParser.Function_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sql_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql_argument_list([NotNull] SqlParser.Sql_argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sql_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql_argument_list([NotNull] SqlParser.Sql_argument_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.orderby_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderby_clause([NotNull] SqlParser.Orderby_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.orderby_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderby_clause([NotNull] SqlParser.Orderby_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sort_specifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSort_specifier_list([NotNull] SqlParser.Sort_specifier_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sort_specifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSort_specifier_list([NotNull] SqlParser.Sort_specifier_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sort_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSort_specifier([NotNull] SqlParser.Sort_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sort_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSort_specifier([NotNull] SqlParser.Sort_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.order_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrder_specification([NotNull] SqlParser.Order_specificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.order_specification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrder_specification([NotNull] SqlParser.Order_specificationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.limit_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimit_clause([NotNull] SqlParser.Limit_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.limit_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimit_clause([NotNull] SqlParser.Limit_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.null_ordering"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNull_ordering([NotNull] SqlParser.Null_orderingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.null_ordering"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNull_ordering([NotNull] SqlParser.Null_orderingContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.insert_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInsert_statement([NotNull] SqlParser.Insert_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.insert_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInsert_statement([NotNull] SqlParser.Insert_statementContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Mlo.Examples.Parsers
